{"version":3,"file":"inboxSDKBackground.js","mappings":"AACAA,OAAOC,QAAQC,UAAUC,aAAY,CAACC,EAASC,EAAQC,KACrD,GAAqB,8BAAjBF,EAAQG,MAAwCF,EAAOG,IACzD,GAAIR,OAAOS,UAAW,CAEpB,IAAIC,EACAC,EACAN,EAAOO,WAITF,EAAc,CAACL,EAAOO,YAEtBD,EAAW,CAACN,EAAOQ,SAErBb,OAAOS,UAAUK,cAAc,CAC7BC,OAAQ,CAAEC,MAAOX,EAAOG,IAAIS,GAAIP,cAAaC,YAC7CO,MAAO,OACPC,MAAO,CAAC,kBAEVb,GAAa,EACf,MAEEA,GAAa","sources":["webpack://@shashankvemuri/email-transcription/./node_modules/@inboxsdk/core/background.js"],"sourcesContent":["/* global chrome */\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  if (message.type === 'inboxsdk__injectPageWorld' && sender.tab) {\n    if (chrome.scripting) {\n      // MV3\n      let documentIds;\n      let frameIds;\n      if (sender.documentId) {\n        // Protect against https://github.com/w3c/webextensions/issues/8 in\n        // browsers (Chrome 106+) that support the documentId property.\n        // Protections for other browsers happen inside the injected script.\n        documentIds = [sender.documentId];\n      } else {\n        frameIds = [sender.frameId];\n      }\n      chrome.scripting.executeScript({\n        target: { tabId: sender.tab.id, documentIds, frameIds },\n        world: 'MAIN',\n        files: ['pageWorld.js'],\n      });\n      sendResponse(true);\n    } else {\n      // MV2 fallback. Tell content script it needs to figure things out.\n      sendResponse(false);\n    }\n  }\n});\n"],"names":["chrome","runtime","onMessage","addListener","message","sender","sendResponse","type","tab","scripting","documentIds","frameIds","documentId","frameId","executeScript","target","tabId","id","world","files"],"sourceRoot":""}